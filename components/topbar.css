/* Top Bar Styling */
#top-bar {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: var(--top-bar-height); /* Thinner top bar */
    background-image: url('../topbar.png'); /* Corrected path: one level up from components folder */
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat; /* Ensure image doesn't repeat */
    background-color: rgba(51, 51, 51, 0.75); /* Less transparent */
    z-index: 1000; /* Ensure it's on top of everything */
    display: flex;
    align-items: center;
    padding: 0 20px;
    /* Vibrant purple line at the bottom */
    box-shadow: 0 2px 0 0 var(--line-purple-default), 0 2px 10px rgba(0, 0, 0, 0.5); /* Line + original shadow */
    transition: box-shadow 0.3s ease-in-out; /* Smooth transition for glow */
}

/* Glow effect on hover for the entire top bar */
#top-bar:hover {
    box-shadow: 0 2px 0 0 var(--line-purple-glow), 0 0 15px 5px var(--line-purple-glow), 0 2px 10px rgba(0, 0, 0, 0.5);
}


#top-bar h1 {
    /* This h1 is now removed from topbar.html */
    /* Keeping the style here just in case, but it won't apply */
    font-size: 2.5em;
    color: #ffffff;
    margin: 0 auto;
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    white-space: nowrap;
}

/* Hexagon Button Styling */
#hexagon-button {
    position: relative; /* Needed for pseudo-element positioning and child absolute positioning */
    width: var(--hexagon-button-size); /* Bigger hexagon button */
    height: var(--hexagon-button-size); /* Bigger hexagon button */
    background-color: transparent; /* No background color for the button itself */
    border: none;
    cursor: pointer;
    transition: transform 0.3s ease-in-out; /* For rolling animation */
    z-index: 1001; /* Ensure button is above other top bar elements if any */
    padding: 0; /* Remove default button padding */
    flex-shrink: 0; /* Prevent button from shrinking */
    overflow: hidden; /* Clip the pseudo-element if it extends beyond the button's bounds */

    /* Hexagon shape using clip-path (applied to the button container) */
    clip-path: polygon(50% 0%, 95% 25%, 95% 75%, 50% 100%, 5% 75%, 5% 25%);
    -webkit-clip-path: polygon(50% 0%, 95% 25%, 95% 75%, 50% 100%, 5% 75%, 5% 25%);

    display: flex; /* Enable flexbox for positioning lines */
    flex-direction: column;
    justify-content: center;
    align-items: center;

    /* Move the entire button container (and its contents) 5 pixels to the left */
    transform: translateX(-5px);
}

/* My hexagonV2.png image inside the button */
.hexagon-image {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%); /* Center the image */
    width: 100%; /* Fill the button's size */
    height: 100%; /* Fill the button's size */
    object-fit: contain; /* Ensure the image fits */
    z-index: 2; /* On top of the pseudo-element, below lines */
}

/* Pseudo-element for the glowing hexagon frame (your hexagon) */
#hexagon-button::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    /* Adjust size to be slightly bigger than the button, and center it */
    width: calc(var(--hexagon-button-size) + 2px); /* Made smaller frame */
    height: calc(var(--hexagon-button-size) + 2px); /* Made smaller frame */
    transform: translate(-50%, -50%); /* Center the pseudo-element */
    background-color: transparent; /* Default transparent */
    clip-path: polygon(50% 0%, 95% 25%, 95% 75%, 50% 100%, 5% 75%, 5% 25%);
    -webkit-clip-path: polygon(50% 0%, 95% 25%, 95% 75%, 50% 100%, 5% 75%, 5% 25%);
    z-index: 1; /* Behind my hexagonV2.png, above button background */
    transition: background-color 0.3s ease-in-out; /* Smooth glow transition */
}

/* Glow effect on hover for the pseudo-element */
#hexagon-button:hover::before {
    background-color: var(--line-purple-default); /* Glow in #ff00ff on hover */
}

/* Color change animation for pseudo-element when sidebar is open */
#hexagon-button.button-rotated::before {
    background-color: var(--line-purple-glow); /* Change to #a500ff when sidebar open */
}


/* Hamburger Line Styling */
.hamburger-line {
    display: block;
    width: 20%; /* Smaller width relative to button size */
    height: 1.5px; /* Thinner lines */
    background-color: #ffffff; /* White lines */
    border-radius: 1px;
    position: absolute; /* Position lines within the button */
    transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out;
    z-index: 3; /* On top of hexagonV2.png */
}

.hamburger-line.line-top {
    transform: translateY(-3.5px); /* Adjusted position for top line */
}

.hamburger-line.line-middle {
    transform: translateY(2px); /* Adjusted position for middle line */
}

.hamburger-line.line-bottom {
    transform: translateY(7.5px); /* Adjusted position for bottom line */
}

/* Animation for lines when sidebar is open (button-rotated class is active) */
#hexagon-button.button-rotated {
    transform: translateX(-5px) rotate(-90deg); /* Apply both translation and rotation */
}

#hexagon-button.button-rotated .line-top {
    transform: translateY(2px) rotate(45deg); /* Adjusted for new base translateY */
}

#hexagon-button.button-rotated .line-middle {
    opacity: 0; /* Fade out middle line */
}

#hexagon-button.button-rotated .line-bottom {
    transform: translateY(2px) rotate(-45deg); /* Adjusted for new base translateY */
}


@media (max-width: 768px) {
    #top-bar h1 {
        font-size: 1.8em;
    }
    :root {
        --hexagon-button-size: 60px; /* Adjusted for mobile */
    }
    .hamburger-line {
        width: 15%; /* Adjust for mobile */
        height: 1px;
    }
    .hamburger-line.line-top {
        transform: translateY(-2.5px); /* Adjusted for mobile */
    }
    .hamburger-line.line-middle {
        transform: translateY(1.5px); /* Adjusted for mobile */
    }
    .hamburger-line.line-bottom {
        transform: translateY(5.5px); /* Adjusted for mobile */
    }
}
